# === Makefile.linux ===

CC = gcc
CFLAGS = -O2 -mavx2 -std=gnu17
INCLUDES = -Isrc
LDFLAGS = -lm -lX11 -lpng

SRC_DIR = src
BUILD_DIR = build
CODE_DIR = code

LIB_DIR = libs
BIN_DIR = bin

LIB_FILES = $(wildcard $(LIB_DIR)/*.c)
SO_FILES = $(patsubst $(LIB_DIR)/%.c,$(BIN_DIR)/%.so,$(LIB_FILES))

TARGET = $(BUILD_DIR)/Main

all: 
	mkdir -p $(BUILD_DIR)
	$(CC) $(CFLAGS) $(INCLUDES) ./$(SRC_DIR)/Main.c -o ./$(TARGET) $(LDFLAGS) 

alldebug: 
	$(CC) -g $(CFLAGS) $(INCLUDES) ./$(SRC_DIR)/Main.c -o ./$(TARGET) $(LDFLAGS) 

debug:
	gdb ./$(TARGET) ./code/Pong.ll

exe:
	./$(TARGET) ./code/Pong.ll

clean:
	rm -rf $(BUILD_DIR)/*

cleanlib:
	rm -rf $(BIN_DIR)/*

lib: $(SO_FILES)

$(BIN_DIR)/%.so: $(LIB_DIR)/%.c
	$(CC) $(CFLAGS) -fPIC -o $@ $< -shared $(LDFLAGS)

win:
	$(CC) $(CFLAGS) -fPIC -o ./$(BIN_DIR)/window.so ./$(LIB_DIR)/window.c -shared $(LDFLAGS) -lX11 -lpng

do: clean all exe

dg: clean alldebug debug

# === Makefile.linux ===